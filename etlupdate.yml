version: 0.2
 
phases:
  install:
    runtime-versions:
      docker: 18
    commands:
      - echo "Installing dependencies..."
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - $(aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 730335363558.dkr.ecr.us-east-1.amazonaws.com)
      - REPOSITORY_URI=730335363558.dkr.ecr.us-east-1.amazonaws.com/nyl-dev-repo1
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo "Building the Docker image..."
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
  post_build:
    commands:
      - echo "Pushing the Docker image to ECR..."
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Creating imagedefinitions.json file..."
      - printf '[{"name":"nyl-dev-repo1","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo "Creating a new Glue job with the new image..."
      - aws glue create-job --name example-glue-job-$(date +%s) --role arn:aws:iam::730335363558:role/AWSGlueServiceRole --command '{
          "Name": "glueetl",
          "ScriptLocation": "",
          "PythonVersion": "3"
        }' --default-arguments '{
          "--TempDir": "s3://codepipeline-hema-artif/",
          "--additional-python-modules": "pandas",
          "--extra-py-files": "'$REPOSITORY_URI:$IMAGE_TAG'"
        }' --worker-type G.1X --number-of-workers 2 --glue-version "3.0" --max-retries 1 --timeout 2880 --tags Key=Owner,Value=example-owner --execution-class STANDARD
artifacts:
  files: imagedefinitions.json
